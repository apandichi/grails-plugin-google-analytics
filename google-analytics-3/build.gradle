buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

version "3.0.1"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

bintray {
    user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    publications = ['maven']
    publish = true
    pkg {
        repo = project.hasProperty('repo') ? project.repo : 'plugins'
        userOrg = 'mozaiclabs'
        name = "$project.name"
        desc = project.hasProperty('desc') ? project.desc : "Grails google-analytics plugin"
        websiteUrl = "https://grails.org/plugin/google-analytics"
        issueTrackerUrl = "https://github.com/apandichi/grails-plugin-google-analytics/issues"
        vcsUrl = "https://github.com/apandichi/grails-plugin-google-analytics/"
        licenses = project.hasProperty('license') ? [project.license] : ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            attributes = ['grails-plugin': "$project.group:$project.name"]
            name = project.version
            gpg {
                sign = false
                passphrase = System.getenv("SIGNING_PASSPHRASE") ?: project.hasProperty("signingPassphrase") ? project.signingPassphrase : ''
            }
            mavenCentralSync {
                sync = false
                user = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
                password = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
            }
        }
    }
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    testCompile "org.spockframework:spock-grails-support:0.7-groovy-2.0"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    user = 'mozaiclabs'
    key = ''
    websiteUrl = "https://grails.org/plugin/google-analytics"
    issueTrackerUrl = "https://github.com/apandichi/grails-plugin-google-analytics/issues"
    vcsUrl = "https://github.com/apandichi/grails-plugin-google-analytics/"
    license {
        name = 'Apache-2.0'
    }
    title = "google-analytics"
    desc = "Grails google-analytics plugin"
    developers = [apandichi:"Alin Pandichi"]
}

assets {
    packagePlugin = true
}
